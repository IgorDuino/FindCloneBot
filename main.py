#! /usr/bin/env python
# -*- coding: utf-8 -*-
import os
import random
import sqlite3
import time

import requests
import telebot

import functions as func
import menu
import settings

catalog_dict = {}
product_dict = {}
download_dict = {}
balance_dict = {}
admin_sending_messages_dict = {}


def start_bot():
    bot = telebot.TeleBot(settings.bot_token)

    # Command start
    @bot.message_handler(commands=['start'])
    def handler_start(message):
        chat_id = message.chat.id
        func.first_join(user_id=chat_id, name=message.from_user.username, code=message.text[6:])
        bot.send_message(chat_id,
                         '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å {}, user id - {}'.format(message.from_user.first_name,
                                                                    chat_id, ),
                         reply_markup=menu.main_menu)

    # Command admin
    @bot.message_handler(commands=['admin'])
    def handler_admin(message):
        chat_id = message.chat.id
        if chat_id in settings.admin_id:
            bot.send_message(chat_id, '–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞', reply_markup=menu.admin_menu)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    @bot.callback_query_handler(func=lambda call: True)
    def handler_call(call):
        print(1)
        chat_id = call.message.chat.id
        message_id = call.message.message_id

        # Main menu
        if call.data == 'catalog':
            ba = int(func.profile(chat_id)[5])
            if ba >= 30:
                st = f'‚úî –ü–æ–∏—Å–∫ —á–µ–ª–æ–≤–µ–∫–∞ –ø–æ —Ñ–æ—Ç–æ —Å—Ç–æ–∏—Ç 30—Ä. \n –ù–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ {ba} —Ä—É–±–ª–µ–π'
                bot.send_message(
                    chat_id=chat_id,
                    text=st,
                    reply_markup=menu.btn_purchase
                )
            else:
                st = f'‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –ü–æ–∏—Å–∫ —á–µ–ª–æ–≤–µ–∫–∞ –ø–æ —Ñ–æ—Ç–æ —Å—Ç–æ–∏—Ç 30—Ä. \n –ù–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ {ba} —Ä—É–±–ª–µ–π'
                bot.send_message(
                    chat_id=chat_id,
                    text=st,
                    reply_markup=menu.replenish_btn
                )

        if call.data == 'exit_from_catalog':
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–∑–∞–¥',
                reply_markup=menu.main_menu
            )

        if call.data == 'buy':
            bl = int(func.profile(chat_id)[5])
            func.give_balance({
                'balance': bl - 30,
                'login': chat_id
            })
            bl = int(func.profile(chat_id)[5])
            st = f'–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å —Ç–≤–æ–π –±–∞–ª–∞–Ω—Å: {bl}. –ñ–¥—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–æ–≤–∞–Ω–∏—è! –í–æ—Ç –ø—Ä–∏–º–µ—Ä —Ö–æ—Ä–æ—à–µ–≥–æ —Ñ–æ—Ç–æ'
            func.set_wait_photo_status(chat_id, 1)
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text=st
            )

        if call.data == 'exit_to_menu':
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                reply_markup=menu.main_menu
            )

        if call.data == 'btn_ok':
            bot.delete_message(chat_id, message_id)

        if call.data == 'profile':
            info = func.profile(chat_id)
            bot.edit_message_text(chat_id=chat_id,
                                  message_id=message_id,
                                  text=settings.profile.format(
                                      id=info[0],
                                      login=f'@{info[1]}',
                                      data=info[2][:19],
                                      balance=info[5]
                                  ),
                                  reply_markup=menu.main_menu)

        if call.data == 'infom':
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text='–ü–æ—á—Ç–∞ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ - poiskphoto_bot@protonmail.com',
                reply_markup=menu.polit_menu
            )

        if call.data == 'polit':
            with open("privacy.txt", "rb") as file:
                bot.send_document(chat_id=chat_id, data=file)

        # Admin menu
        if call.data == 'admin_info':
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text=func.admin_info(),
                reply_markup=menu.admin_menu
            )

        if call.data == 'exit_admin_menu':
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text='–í—ã –ø–æ–∫–∏–Ω—É–ª–∏ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞',
                reply_markup=menu.main_menu
            )

        if call.data == 'back_to_admin_menu':
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text='–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞',
                reply_markup=menu.admin_menu
            )

        if call.data == 'replenish_balance':
            bot.edit_message_text(chat_id=chat_id,
                                  message_id=message_id,
                                  text=func.replenish_balance(chat_id),
                                  reply_markup=menu.replenish_balance)

        if call.data == 'cancel_payment':
            func.cancel_payment(chat_id)
            bot.edit_message_text(chat_id=chat_id,
                                  message_id=message_id,
                                  text='‚ùï –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!',
                                  reply_markup=menu.main_menu)

        if call.data == 'check_payment':
            for useradmin in settings.admin_id:
                check = func.check_payment(chat_id)
                if check[0] == 1:
                    bot.edit_message_text(chat_id=chat_id,
                                          message_id=message_id,
                                          text=f'‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞\n–°—É–º–º–∞ - {check[1]} —Ä—É–±',
                                          reply_markup=menu.main_menu)

                    bot.send_message(chat_id=useradmin,
                                     text='üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞\n'
                                          f'üî• –û—Ç - {chat_id}\n'
                                          f'üî• –°—É–º–º–∞ - {check[1]} —Ä—É–±')

            if check[0] == 0:
                bot.send_message(chat_id=chat_id,
                                 text='‚ùå –û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞',
                                 reply_markup=menu.to_close)

        if call.data == 'to_close':
            bot.delete_message(chat_id=chat_id,
                               message_id=message_id)

        if call.data == 'give_balance':
            msg = bot.send_message(chat_id=chat_id,
                                   text='–í–≤–µ–¥–∏—Ç–µ ID —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ—Ç –∏–∑–º–µ–Ω—ë–Ω –±–∞–ª–∞–Ω—Å')

            bot.register_next_step_handler(msg, give_balance)

        if call.data == 'admin_sending_messages':
            msg = bot.send_message(chat_id,
                                   text='–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏')
            bot.register_next_step_handler(msg, admin_sending_messages)

        if call.data == 'referral_web':
            ref_code = func.check_ref_code(chat_id)
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text=f'üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–µ—Ç—å\n\n'
                     f'–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n'
                     f'https://teleg.run/{settings.bot_login}?start={ref_code}\n\n'
                     f'–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è –≤—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ - {func.check_all_profit_user(chat_id)} ‚ÇΩ\n\n'
                     f'<i>–ï—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã–π –ø–æ –≤–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –ø–æ–ø–æ–ª–Ω–∏—Ç –±–∞–ª–∞–Ω—Å, —Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ '
                     f'{settings.ref_percent} % –æ—Ç —Å—É–º–º—ã –µ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞</i>',
                reply_markup=menu.main_menu,
                parse_mode='html'
            )

        if call.data == 'admin_top_ref':
            bot.send_message(
                chat_id=chat_id,
                text=func.admin_top_ref(),
                parse_mode='html'
            )

    def give_balance(message):
        try:
            balance = func.GiveBalance(message.text)
            balance_dict[message.chat.id] = balance

            msg = bot.send_message(chat_id=message.chat.id,
                                   text='–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –∏–∑–º–µ–Ω–∏—Ç—Å—è –±–∞–ª–∞–Ω—Å(–∫ –±–∞–ª–∞–Ω—Å—É –Ω–µ –¥–æ–±–∞–≤–∏—Ç—Å—è —ç—Ç–∞ —Å—É–º–º–∞, '
                                        '–∞ –±–∞–ª–∞–Ω—Å –∏–∑–º–µ–Ω–∏—Ç—Å—è –Ω–∞ –Ω–µ—ë)')

            bot.register_next_step_handler(msg, give_balance_2)
        except Exception as e:
            bot.send_message(chat_id=message.chat.id,
                             text='‚ö†Ô∏è –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ –ø–æ –ø–ª–∞–Ω—É',
                             reply_markup=menu.main_menu)

    def give_balance_2(message):
        try:
            balance = balance_dict[message.chat.id]
            balance.balance = message.text
            code = random.randint(111, 999)
            balance.code = code
            msg = bot.send_message(chat_id=message.chat.id,
                                   text=f'ID - {balance.login}\n'
                                        f'–ë–∞–ª–∞–Ω—Å –∏–∑–º–µ–Ω–∏—Ç—Å—è –Ω–∞ - {balance.balance}\n'
                                        f'–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ {code}')

            bot.register_next_step_handler(msg, give_balance_3)
        except Exception as e:
            bot.send_message(chat_id=message.chat.id,
                             text='‚ö†Ô∏è –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ –ø–æ –ø–ª–∞–Ω—É',
                             reply_markup=menu.main_menu)

    def give_balance_3(message):
        try:
            balance = balance_dict[message.chat.id]
            if int(message.text) == balance.code:
                func.give_balance(balance)
                bot.send_message(chat_id=message.chat.id,
                                 text='‚úÖ –ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω')
        except Exception as e:
            bot.send_message(chat_id=message.chat.id,
                             text='‚ö†Ô∏è –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ –ø–æ –ø–ª–∞–Ω—É',
                             reply_markup=menu.main_menu)

    def admin_sending_messages(message):
        dict = func.Admin_sending_messages(message.chat.id)
        admin_sending_messages_dict[message.chat.id] = dict

        dict = admin_sending_messages_dict[message.chat.id]
        dict.text = message.text

        msg = bot.send_message(message.chat.id,
                               text='–û—Ç–ø—Ä–∞–≤—å—Ç–µ "–ü–û–î–¢–í–ï–†–î–ò–¢–¨" –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è')
        bot.register_next_step_handler(msg, admin_sending_messages_2)

    def admin_sending_messages_2(message):
        conn = sqlite3.connect('base_ts.sqlite')
        cursor = conn.cursor()
        dict = admin_sending_messages_dict[message.chat.id]
        if message.text == '–ü–û–î–¢–í–ï–†–î–ò–¢–¨':
            cursor.execute(f'SELECT * FROM users')
            row = cursor.fetchall()

            for i in range(len(row)):
                try:
                    time.sleep(1)
                    bot.send_message(row[i][0], dict.text)

                except:

                    pass
        else:
            bot.send_message(message.chat.id, text='–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞')

    @bot.message_handler(content_types=['photo'])
    def handle_docs_document(message):
        chat_id = message.chat.id
        message_id = message.id

        if func.get_wait_photo_status(chat_id):
            file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
            downloaded_file = bot.download_file(file_info.file_path)
            src = f'files/{chat_id}.png'
            with open(src, 'wb') as new_file:
                new_file.write(downloaded_file)
            bot.send_message(chat_id=chat_id,
                             text="–§–æ—Ç–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è. –í–æ—Ç –≤–æ—Ç –±—É–¥–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç")

            resf = func.recognize(chat_id)
            if resf == 'error':
                bot.send_message(chat_id=chat_id,
                                 text='–ü—Ä–æ—à—É –ø—Ä–æ—â–µ–Ω–∏—è, –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞! –Ω–∞ –í–∞—à –±–∞–ª–∞–Ω—Å –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ 30—Ä.',
                                 reply_markup=menu.after_recognize_menu)
            else:
                #             resf = [
                #                 """
                #                 üë§
                # ‚îú –°–æ–≤–ø–∞–¥–µ–Ω–∏—è: 84 %
                # ‚îú –ò–º—è: –¢–µ—Å—Ç —á–µ–ª 1
                # ‚îú –í–æ–∑—Ä–∞—Å—Ç: 37
                # ‚îú –ì–æ—Ä–æ–¥: –ú–æ—Å–∫–≤–∞
                # ‚îî –°—Ç—Ä–∞–Ω–∏—Ü–∞: https://vk.com/id2551535
                #
                # üë§
                # ‚îú –°–æ–≤–ø–∞–¥–µ–Ω–∏—è: 68 %
                # ‚îú –ò–º—è: –¢–µ—Å—Ç —á–µ–ª 2
                # ‚îú –í–æ–∑—Ä–∞—Å—Ç: –ù–µ —É–∫–∞–∑–∞–Ω
                # ‚îú –ì–æ—Ä–æ–¥: –ù–µ —É–∫–∞–∑–∞–Ω
                # ‚îî –°—Ç—Ä–∞–Ω–∏—Ü–∞: https://vk.com/id420235404
                #
                # üë§
                # ‚îú –°–æ–≤–ø–∞–¥–µ–Ω–∏—è: 68 %
                # ‚îú –ò–º—è: –¢–µ—Å—Ç —á–µ–ª 3
                # ‚îú –í–æ–∑—Ä–∞—Å—Ç: 31
                # ‚îú –ì–æ—Ä–æ–¥: –ó—É–≥–¥–∏–¥–∏
                # ‚îî –°—Ç—Ä–∞–Ω–∏—Ü–∞: https://vk.com/id350649139
                # """, ['https://i06.fotocdn.net/s122/90c754bad68cd4db/user_xl/2782181550.jpg',
                #       'https://clipart-db.ru/file_content/rastr/xpeople_034.png.pagespeed.ic.rUAONXIUay.png',
                #       'https://zvukobook.ru/800/600/https/srazu.pro/wp-content/uploads/2019/09/kartinka-3.-teorija.jpg']
                #             ]

                restext = f'–†–µ–∑—É–ª—å—Ç–∞—Ç: \n{resf[0]}'

                for i in range(1, len(resf[1]) + 1):
                    p = requests.get(resf[1][i - 1])
                    out = open(f"files/{chat_id}_temp{i}.jpg", "wb")
                    out.write(p.content)
                    out.close()

                pic1 = open(f"files/{chat_id}_temp1.jpg", "rb")
                pic2 = open(f"files/{chat_id}_temp2.jpg", "rb")
                pic3 = open(f"files/{chat_id}_temp3.jpg", "rb")

                media = [telebot.types.InputMediaPhoto(pic1), telebot.types.InputMediaPhoto(pic2),
                         telebot.types.InputMediaPhoto(pic3)]

                bot.send_media_group(message.chat.id, media)

                bot.send_message(chat_id=chat_id,
                                 text=restext,
                                 reply_markup=menu.after_recognize_menu)

                pic1.close()
                pic2.close()
                pic3.close()

                os.remove(f"files/{chat_id}_temp1.jpg")
                os.remove(f"files/{chat_id}_temp2.jpg")
                os.remove(f"files/{chat_id}_temp3.jpg")
            func.set_wait_photo_status(chat_id, 0)

        else:
            bot.send_message(chat_id=chat_id,
                             text="–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –ø–æ —Ñ–æ—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é",
                             reply_markup=menu.main_menu)

    bot.polling(none_stop=True)


start_bot()
